name: Django-app workflow

on: push

jobs:
  linters:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.11" ]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip
        pip install flake8
        cd backend/
        pip install -r requirements.txt
    - name: Test with flake8 and django tests
      run: |
        python -m flake8

  build_and_push_to_docker_hub:
    runs-on: ubuntu-latest
    needs: linters
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push backend to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: backend/
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/physact_backend:latest
            ${{ secrets.DOCKER_USERNAME }}/physact_backend:${{ github.ref }}

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop'
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo docker-compose down
            sudo docker pull easyfitorg/physact_backend:latest
            touch .env
            echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
            echo DEBUG=${{ secrets.DEBUG }} >> .env
            echo EMAIL_HOST=${{ secrets.EMAIL_HOST }} >> .env
            echo EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }} >> .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo DB_USER=${{ secrets.DB_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo DJANGO_SUPERUSER_FIRST_NAME=${{ secrets.DJANGO_SUPERUSER_FIRST_NAME }} >> .env
            echo DJANGO_SUPERUSER_PASSWORD=${{ secrets.DJANGO_SUPERUSER_PASSWORD }} >> .env
            echo DJANGO_SUPERUSER_EMAIL=${{ secrets.DJANGO_SUPERUSER_EMAIL }} >> .env
            echo DJANGO_TRUSTED_ORIGINS=${{ secrets.DJANGO_TRUSTED_ORIGINS }} >> .env
            sudo docker-compose up -d
